name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build and Release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact: sniff-linux-x64
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            artifact: sniff-linux-arm64
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact: sniff-macos-x64
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact: sniff-macos-arm64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact: sniff-windows-x64.exe

    steps:
      - uses: actions/checkout@v3
      
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: Install cross-compilation dependencies (Linux ARM64)
        if: matrix.target == 'aarch64-unknown-linux-gnu'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target ${{ matrix.target }}
        env:
          CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER: aarch64-linux-gnu-gcc

      - name: Prepare artifact (Unix)
        if: matrix.os != 'windows-latest'
        run: |
          cp target/${{ matrix.target }}/release/sniff ${{ matrix.artifact }}
          chmod +x ${{ matrix.artifact }}

      - name: Prepare artifact (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          copy target\${{ matrix.target }}\release\sniff.exe ${{ matrix.artifact }}

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.artifact }}
          path: ${{ matrix.artifact }}

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Download all artifacts
        uses: actions/download-artifact@v3
        
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            sniff-linux-x64/sniff-linux-x64
            sniff-linux-arm64/sniff-linux-arm64
            sniff-macos-x64/sniff-macos-x64
            sniff-macos-arm64/sniff-macos-arm64
            sniff-windows-x64.exe/sniff-windows-x64.exe
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}